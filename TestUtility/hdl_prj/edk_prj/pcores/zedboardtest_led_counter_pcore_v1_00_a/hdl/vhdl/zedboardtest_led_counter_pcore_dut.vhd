-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ZedBoardTest\zedboardtest_led_counter_pcore_dut.vhd
-- Created: 2015-02-12 16:24:52
-- 
-- Generated by MATLAB 8.4 and HDL Coder 3.5
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: zedboardtest_led_counter_pcore_dut
-- Source Path: zedboardtest_led_counter_pcore/zedboardtest_led_counter_pcore_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY zedboardtest_led_counter_pcore_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        in1                               :   IN    std_logic;  -- ufix1
        in2                               :   IN    std_logic;  -- ufix1
        in3                               :   IN    std_logic;  -- ufix1
        in4                               :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        LED1                              :   OUT   std_logic;  -- ufix1
        LED2                              :   OUT   std_logic;  -- ufix1
        LED3                              :   OUT   std_logic;  -- ufix1
        LED4                              :   OUT   std_logic;  -- ufix1
        read_back1                        :   OUT   std_logic;  -- ufix1
        read_back2                        :   OUT   std_logic;  -- ufix1
        read_back3                        :   OUT   std_logic;  -- ufix1
        read_back4                        :   OUT   std_logic  -- ufix1
        );
END zedboardtest_led_counter_pcore_dut;


ARCHITECTURE rtl OF zedboardtest_led_counter_pcore_dut IS

  -- Component Declarations
  COMPONENT led_counter
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          in1                             :   IN    std_logic;  -- ufix1
          in2                             :   IN    std_logic;  -- ufix1
          in3                             :   IN    std_logic;  -- ufix1
          in4                             :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          LED1                            :   OUT   std_logic;  -- ufix1
          LED2                            :   OUT   std_logic;  -- ufix1
          LED3                            :   OUT   std_logic;  -- ufix1
          LED4                            :   OUT   std_logic;  -- ufix1
          read_back1                      :   OUT   std_logic;  -- ufix1
          read_back2                      :   OUT   std_logic;  -- ufix1
          read_back3                      :   OUT   std_logic;  -- ufix1
          read_back4                      :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : led_counter
    USE ENTITY work.led_counter(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL in1_sig                          : std_logic;  -- ufix1
  SIGNAL in2_sig                          : std_logic;  -- ufix1
  SIGNAL in3_sig                          : std_logic;  -- ufix1
  SIGNAL in4_sig                          : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL LED1_sig                         : std_logic;  -- ufix1
  SIGNAL LED2_sig                         : std_logic;  -- ufix1
  SIGNAL LED3_sig                         : std_logic;  -- ufix1
  SIGNAL LED4_sig                         : std_logic;  -- ufix1
  SIGNAL read_back1_sig                   : std_logic;  -- ufix1
  SIGNAL read_back2_sig                   : std_logic;  -- ufix1
  SIGNAL read_back3_sig                   : std_logic;  -- ufix1
  SIGNAL read_back4_sig                   : std_logic;  -- ufix1

BEGIN
  u_led_counter : led_counter
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              in1 => in1_sig,  -- ufix1
              in2 => in2_sig,  -- ufix1
              in3 => in3_sig,  -- ufix1
              in4 => in4_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              LED1 => LED1_sig,  -- ufix1
              LED2 => LED2_sig,  -- ufix1
              LED3 => LED3_sig,  -- ufix1
              LED4 => LED4_sig,  -- ufix1
              read_back1 => read_back1_sig,  -- ufix1
              read_back2 => read_back2_sig,  -- ufix1
              read_back3 => read_back3_sig,  -- ufix1
              read_back4 => read_back4_sig  -- ufix1
              );

  in1_sig <= in1;

  in2_sig <= in2;

  in3_sig <= in3;

  in4_sig <= in4;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  LED1 <= LED1_sig;

  LED2 <= LED2_sig;

  LED3 <= LED3_sig;

  LED4 <= LED4_sig;

  read_back1 <= read_back1_sig;

  read_back2 <= read_back2_sig;

  read_back3 <= read_back3_sig;

  read_back4 <= read_back4_sig;

END rtl;

