-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\PWM_controller\PWM_Controller.vhd
-- Created: 2015-01-15 16:33:55
-- 
-- Generated by MATLAB 8.4 and HDL Coder 3.5
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- PWM                           ce_out        1
-- DIR                           ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: PWM_Controller
-- Source Path: PWM_controller/PWM Controller
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY PWM_Controller IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        enable                            :   IN    std_logic;
        duty                              :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        direction                         :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        PWM                               :   OUT   std_logic;
        DIR                               :   OUT   std_logic
        );
END PWM_Controller;


ARCHITECTURE rtl OF PWM_Controller IS

  -- Component Declarations
  COMPONENT Calculate_f_coeff
    PORT( pwm_freq                        :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          f_coeff                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  COMPONENT Chart
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          pwm_enable                      :   IN    std_logic;
          duty                            :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          f_coeff                         :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
          PWM                             :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Calculate_f_coeff
    USE ENTITY work.Calculate_f_coeff(rtl);

  FOR ALL : Chart
    USE ENTITY work.Chart(rtl);

  -- Signals
  SIGNAL pwm_freq_out1                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Calculate_f_coeff_out1           : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_Calculate_f_coeff : Calculate_f_coeff
    PORT MAP( pwm_freq => std_logic_vector(pwm_freq_out1),  -- uint32
              f_coeff => Calculate_f_coeff_out1  -- uint32
              );

  u_Chart : Chart
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              pwm_enable => enable,
              duty => duty,  -- uint8
              f_coeff => Calculate_f_coeff_out1,  -- uint32
              PWM => PWM
              );

  pwm_freq_out1 <= to_unsigned(16#00000190#, 32);

  ce_out <= clk_enable;


  DIR <= direction;

END rtl;

