-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\PWM_controller\Calculate_f_coeff.vhd
-- Created: 2014-10-15 17:50:17
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Calculate_f_coeff
-- Source Path: PWM_controller/PWM Controller/Calculate f_coeff
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Calculate_f_coeff IS
  PORT( pwm_freq                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        f_coeff                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END Calculate_f_coeff;


ARCHITECTURE rtl OF Calculate_f_coeff IS

  -- Constants
  CONSTANT C_divbyzero_p                  : unsigned(32 DOWNTO 0) := unsigned'("111111111111111111111111111111111");  -- ufix33
  CONSTANT C_divbyzero_p_2                : unsigned(32 DOWNTO 0) := unsigned'("111111111111111111111111111111111");  -- ufix33

  -- Signals
  SIGNAL pl_cl_out1                       : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL pwm_freq_unsigned                : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Divide1_div_temp                 : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Divide1_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL q_out1                           : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Divide_div_temp                  : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Divide_out1                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Constant_out1                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Sum_out1                         : unsigned(31 DOWNTO 0);  -- uint32

BEGIN
  pl_cl_out1 <= to_unsigned(16#017D7840#, 32);

  pwm_freq_unsigned <= unsigned(pwm_freq);

  
  Divide1_div_temp <= C_divbyzero_p WHEN pwm_freq_unsigned = 0 ELSE
      resize(pl_cl_out1, 33) / pwm_freq_unsigned;
  
  Divide1_out1 <= X"FFFFFFFF" WHEN Divide1_div_temp(32) /= '0' ELSE
      Divide1_div_temp(31 DOWNTO 0);

  q_out1 <= to_unsigned(16#000000FF#, 32);

  
  Divide_div_temp <= C_divbyzero_p_2 WHEN q_out1 = 0 ELSE
      resize(Divide1_out1, 33) / q_out1;
  
  Divide_out1 <= X"FFFFFFFF" WHEN Divide_div_temp(32) /= '0' ELSE
      Divide_div_temp(31 DOWNTO 0);

  Constant_out1 <= to_unsigned(16#00000001#, 32);

  Sum_out1 <= Divide_out1 + Constant_out1;

  f_coeff <= std_logic_vector(Sum_out1);

END rtl;

